@model IEnumerable<SpaceAndGo.Models.Article>
@{
    ViewData["Title"] = "News";
    Layout = "~/Views/Shared/_LayoutNews.cshtml";
}
<style>
    .overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 30%;
        width: 100%;
        opacity: 0;
        transition: .5s ease;
        background-color: white;
        padding: 0px 0px 10px 10px
    }

    .item:hover .overlay {
        opacity: 1
    }

    .text {
        color: black;
        font-size: 2rem;
        text-align: justify
    }

    .overlay p {
        font-size: 1.5rem;
    }

    img {
        display: block;
        width: 100%;
        height: auto;
    }

    .description {
        background-color: white;
        padding: 0 20px;
        border-bottom-left-radius: 25px;
        border-bottom-right-radius: 25px;
        height: 300px;
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: justify
    }

    .boxes {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        width: 300px;
        height: 500px;
        margin: 30px 50px 20px;
        border-radius: 25px;
    }

    .newsbox {
        display: flex;
        flex-direction: row;
        justify-content: center;
    }

    .newsimage {
        border-top-left-radius: 25px;
        border-top-right-radius: 25px;
        height: 200px
    }

    #carousel {
        width: 70%;
        height: auto
    }

    @@media screen and (max-width: 768px) {
        [class*="col-"] {
            width: 100%;
        }

        .text {
            font-size: 1.5rem;
        }

        .overlay {
            opacity: 1
        }

            .overlay p {
                display: none
            }

        #carousel {
            width: 100%
        }

        .newsbox {
            flex-direction: column;
        }

        .boxes {
            width: 100%;
            margin: 30px 0px 20px;
        }
    }
</style>

<div class="container-fluid" id="carousel">
    <div id="myCarousel" class="carousel slide" data-ride="carousel">
        <!-- Wrapper for slides -->
        <div class="carousel-inner">
            @if (Model.ToList().Count > 0)
            {
                IEnumerable<Article> collection = Model;
                <div class="item active">
                    <a href="@collection.ElementAt(5).link" target="_blank">
                        <img src="@collection.ElementAt(5).media" alt="@collection.ElementAt(5).country" style="height: 500px;">
                    </a>
                    <div class="overlay">
                        <h3 class="text">@collection.ElementAt(5).title</h3>
                        <p>
                           @collection.ElementAt(5).summary
                        </p>
                    </div>
                </div>

                for (int i = 1; i < 4; i++)
                {
                    <div class="item">
                        <a href="@collection.ElementAt(i).link" target="_blank">
                            <img src="@collection.ElementAt(i).media" alt="@collection.ElementAt(i).country" style="height: 500px;">
                        </a>
                        <div class="overlay">
                            <h3 class="text">@collection.ElementAt(i).title</h3>
                            <p>@collection.ElementAt(i).summary</p>
                        </div>
                    </div>
                }

             }
        </div>

        <!-- Left and right controls -->
        <a class="left carousel-control" href="#myCarousel" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>



<!--1st news row-->

@if (Model.ToList().Count > 0)
{

    IEnumerable<Article> collection = Model;
    int num = 0;
    for (int j = 0; j < collection.Count() / 3; j++)
    {
        <div class="container newsbox">
            @{int counter = 1;
          
                num+=1;
                for (int i = num; i < collection.Count(); i++)
                {
                    if (counter > 3)
                    {
                        break;
                    }
                    else
                    {
                        <div class="row boxes">
                            <a href="@collection.ElementAt(i).link" target="_blank" style="text-decoration: none; color: black">
                                <img src="@collection.ElementAt(i).media" class="newsimage" alt="@collection.ElementAt(i).country">
                                <div class="description">
                                    <h3>@collection.ElementAt(i).title</h3>
                                    <p>@collection.ElementAt(i).summary</p>
                                </div>
                            </a>
                        </div>

                        counter += 1;
                        num += 1;
                    }
                }
             }
        </div>
        }

    




}
